package com.depromeet.breadmapbackend.domain.bakery.ranking;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.atomic.AtomicLong;

/**
 * ScoredBakeryRepositoryImpl
 *
 * @author jaypark
 * @version 1.0.0
 * @since 2023/07/02
 */
class ScoredBakeryRepositoryImpl implements ScoredBakeryRepository {

	private final AtomicLong autoGeneratedId = new AtomicLong(0);
	private final List<ScoredBakery> data = Collections.synchronizedList(new ArrayList<>());

	@Override
	public int bulkInsert(final List<ScoredBakery> scoredBakeryList) {
		data.clear();
		scoredBakeryList.stream()
			.map(scoredBakery -> ScoredBakery.builder()
				.id(autoGeneratedId.incrementAndGet())
				.bakery(scoredBakery.getBakery())
				.bakeryRating(scoredBakery.getBakeryRating())
				.flagCount(scoredBakery.getFlagCount())
				.totalScore(scoredBakery.getTotalScore())
				.build())
			.forEach(data::add);

		return data.size();
	}
}
